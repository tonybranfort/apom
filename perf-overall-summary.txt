|        |              |         | RESPONSE TIMES: 95th Percentile per property* (milliseconds; .001 microsecond) =>                                                                                                                      |
| apom v |   platform   | node v  | f1  | f2  | f3  | f4  | f5  | f6  | f7  | f8  | f9  | f10 | f11 | f12 | ms1 | ms2 | ms3 | ms4 | ms5 | ms6 | m1  | m2  | m3  | m4  | m5  | m6  | m7  | m8  | m9  | m10 | m11 | m12 | m13 | m14 | m15 | m16 | m17 | rm1 | rm2 | rm3 | rm4 | rm5 | rm6 | rm7 | rm8 | rm9 |rm10 |rm11 |rm12 |Filename (test grouping)                                                        |
|--------|--------------|---------|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|--------------------------------------------------------------------------------|
| 1.0.7  |    win32     | 0.12.3  |  4.4|  8.7|  5.0| 13.0| 10.7|  9.8| 17.7| 10.3| 11.4|  7.4|  5.8|  5.2| 42.3|     | 40.7| 32.6|     | 28.4|  9.6|     | 11.6|  9.8|     | 11.6| 16.1|     | 13.8|  7.1|  3.9| 14.2|     |  3.6|  7.9|     |  3.6| 45.5|     |  5.1| 36.8|     | 28.0| 11.3|     |  5.5|  6.7|     |  8.3|2016-01-25_win32_v1.0.7_node-v0.12.3_vol100to1k_1453729206875.json              |
| 1.0.7  |    win32     | 0.12.3  |  4.5| 10.3|  4.4| 10.1|  9.1| 14.0|  8.7| 11.3| 13.1| 11.8|  8.8| 10.0| 47.6|     | 43.4| 27.7|     | 63.0|  7.3|     |  8.4|  8.5|     |  7.5| 28.0|     | 10.7|  4.8| 13.8|  3.6|     |  3.2|  3.4|     |  3.6| 21.1|     | 23.7| 31.8|     | 21.3|  7.3|     |  8.3|  5.1|     | 14.2|2016-01-25_win32_v1.0.7_node-v0.12.3_vol100to1k_1453732424103.json              |
| 1.0.6  | aws-t2.micro | 0.12.7  |  3.6|  4.6|  4.2| 12.2|     | 12.1|  5.3|  6.1| 10.7|  5.6|  3.6|  4.2|188.8|     | 35.7| 32.7|     | 31.1|  5.7|     |  6.4|  8.1|     |  7.3| 13.1|     | 12.8|  6.0|  6.5|  5.9|     |  5.8|  6.3|     |  5.7| 38.6|     |  7.6| 29.5|     | 26.3|  8.6|     |  8.7|  8.3|     |  7.8|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v0.12.7_v100to1k_1454016611344.json   |
| 1.0.6  | aws-t2.micro | 0.12.7  |  3.6|  9.3|  4.1|  9.4|     | 13.5|  5.5|  9.1| 10.2|  8.2|  3.3|  7.1| 40.6|     | 37.1| 29.9|     | 22.5|  6.1|     |  6.3|  8.0|     |  6.7| 12.2|     | 12.6|  4.0|  4.6|  3.8|     |  3.7|  4.1|     |  3.7| 31.8|     |  5.5| 23.7|     | 22.7|  6.6|     |  6.0|  7.4|     |  7.7|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v0.12.7_v100to1k_1454016741185.json   |
| 1.0.6  | aws-t2.micro | 0.12.7  |  3.5|  4.9|  4.1|  9.8|     |  8.7|  5.5|  8.7|  4.2|  7.5|  3.3|  3.8| 35.9|     | 35.2| 22.8|     | 24.7|  6.3|     |  6.3|  7.6|     |  7.2| 12.1|     | 13.4|  4.1|  4.2|  6.1|     |  3.8|  4.2|     |  3.7| 24.6|     | 24.0| 27.6|     | 21.2| 13.6|     |  6.2|  9.5|     |  8.0|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v0.12.7_v100to1k_1454016874319.json   |
| 1.0.6  | aws-t2.micro |  4.2.4  |  6.0| 14.7|  6.1| 13.8|     | 12.9|  8.8|  9.1|  8.0| 10.0|  5.0|  5.2| 49.6|     |229.1|129.8|     | 29.7|  9.2|     | 21.5| 13.4|     | 11.2|111.4|     | 24.6|  8.5|  8.2| 11.5|     |  7.4| 12.6|     |  7.4| 52.1|     | 40.1| 39.1|     | 34.9| 12.8|     | 12.8| 18.8|     | 11.7|2016-01-23_linux_aws-t2.micro_v1.0.6_node-v4.2.4_vol100to1k_1453560985618.json  |
| 1.0.6  | aws-t2.micro |  4.2.4  |  5.3|  7.7|  5.9| 16.5|     | 17.4|  7.8|  9.7| 13.8| 10.4|  5.2|  7.7|127.0|     |215.5|119.0|     |112.1|  9.2|     |  9.4| 40.6|     | 11.8| 30.6|     | 31.0| 25.9| 26.0| 19.1|     | 24.5| 14.4|     | 18.4| 49.9|     | 49.5| 50.8|     | 49.8| 32.9|     | 32.4| 23.0|     | 30.4|2016-01-23_linux_aws-t2.micro_v1.0.6_node-v4.2.4_vol100to1k_1453561090151.json  |
| 1.0.6  | aws-t2.micro |  4.2.4  |  5.2|  6.3|  5.6| 16.3|     | 16.7|  9.8| 10.2|  9.0|  9.6|  6.0|  6.4|125.5|     |123.4|115.0|     |110.5|  9.2|     | 15.6| 11.3|     | 11.3| 28.6|     | 30.6| 25.4| 16.5| 20.5|     | 24.1| 25.3|     | 25.0| 51.7|     | 46.0| 55.2|     | 50.8| 32.7|     | 30.9| 31.2|     | 30.3|2016-01-23_linux_aws-t2.micro_v1.0.6_node-v4.2.4_vol100to1k_1453561200313.json  |
| 1.0.6  | aws-t2.micro |  4.2.4  |  5.4|  6.8|  6.0| 17.9|     | 17.8|  7.8|  9.4|  6.9|  6.7|  7.1|  6.4|135.2|     |125.7|113.0|     |153.8|  9.3|     | 16.3| 12.0|     | 11.8| 32.3|     | 30.0| 19.0|  8.3|  7.7|     | 14.4| 23.1|     |  7.8| 36.3|     | 41.4| 41.7|     | 36.5| 21.8|     | 23.6| 28.2|     | 28.5|2016-01-23_linux_aws-t2.micro_v1.0.6_node-v4.2.4_vol100to1k_1453575508399.json  |
| 1.0.6  | aws-t2.micro |  4.2.4  |  6.4|  6.6|  6.3| 16.4|     | 17.2|  9.4|  9.5| 13.3|  8.1|  5.2|  5.0|130.6|     |349.6|109.2|     |112.2|  9.5|     |  9.8| 12.8|     | 36.7| 23.3|     | 31.9| 26.2| 19.3| 15.6|     | 25.4| 27.2|     | 25.7| 43.5|     | 43.2| 49.3|     | 49.2| 33.1|     | 32.1| 30.3|     | 29.6|2016-01-23_linux_aws-t2.micro_v1.0.6_node-v4.2.4_vol100to1k_1453575616176.json  |
| 1.0.6  | aws-t2.micro |  4.2.4  |  5.3|  6.9|  6.1| 17.7|     | 18.0|  8.4|  9.5|  9.8|  7.0|  6.6|  4.7|136.6|     |405.3|114.1|     |111.2|  9.7|     |  9.7| 15.8|     | 13.0| 31.2|     | 29.6|  9.1| 12.1|  8.3|     |  8.4| 20.5|     |  8.2| 42.8|     | 40.7| 47.5|     | 39.8| 24.1|     | 23.7| 23.8|     | 22.4|2016-01-23_linux_aws-t2.micro_v1.0.6_node-v4.2.4_vol100to1k_1453575727951.json  |
| 1.0.6  | aws-t2.micro |  5.4.1  |  4.4|  6.7|  4.9| 50.4|     | 12.0|  8.3| 10.9|  4.4|  6.1|  3.4|  5.2| 85.4|     | 76.2| 76.0|     | 59.5|  6.5|     |  6.7|  8.8|     |  7.9| 13.1|     | 94.1|  4.6|  3.8|  3.3|     |  3.2|  3.5|     |  3.3| 23.0|     | 22.4| 24.0|     | 63.4|109.1|     | 82.8|  7.7|     |  7.8|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v5.4.1_vol100to1k_1453989901793.json  |
| 1.0.6  | aws-t2.micro |  5.4.1  |  4.4|  4.8|  4.8| 12.1|     | 15.4| 12.6|  7.0|  8.7|  7.2|  3.9|  5.0| 83.4|     |163.7| 73.6|     | 61.0|  6.8|     |  6.9|  9.0|     |  8.0| 12.0|     | 14.9| 10.6|  7.3|  7.0|     |  6.6|  8.8|     |  6.4| 19.8|     | 27.5| 38.3|     | 27.2| 19.6|     | 11.4| 12.9|     |  9.9|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v5.4.1_vol100to1k_1453989985503.json  |
| 1.0.6  | aws-t2.micro |  5.4.1  |  4.4|  4.6|  4.9|  9.8|     | 12.6|  6.7|  8.0|  7.7|  5.8|  3.2|  4.6| 68.9|     | 73.8| 52.4|     | 58.1| 14.2|     |  6.7|  8.6|     |  7.9| 17.1|     | 15.1|  4.3|  3.4|  3.5|     |  5.2|  3.4|     |  3.0| 23.8|     | 22.7| 28.9|     | 21.7|  5.3|     |  5.4| 16.3|     |  4.9|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v5.4.1_vol100to1k_1453990070808.json  |
| 1.0.6  | aws-t2.micro |  5.4.1  |  4.7|  5.0|  4.7| 12.0|     | 12.7| 12.6|  6.9|  6.8|  6.3|  4.4|  5.3| 87.9|     | 77.7| 69.9|     | 64.1|  7.4|     |  6.9|  9.6|     |  7.5| 15.5|     | 16.1|  8.4|  8.2| 11.0|     |  8.1|  7.8|     |  6.7| 11.6|     | 28.7| 37.5|     | 31.9| 21.9|     | 19.2| 20.0|     |  9.7|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v5.4.1_vol100to1k_1453990153352.json  |
| 1.0.6  | aws-t2.micro |  5.4.1  |  4.4|  6.7|  5.0| 13.0|     | 12.8|  6.5|  8.7|  9.8|  7.7| 42.9|  5.5| 72.8|     | 76.2| 92.1|     | 61.8|  7.3|     | 12.7|  8.0|     | 17.9|103.0|     | 21.8|  7.5|  8.2| 11.5|     |  6.9|  8.3|     |  6.8| 43.8|     | 30.5| 32.0|     | 29.5| 21.5|     | 12.6| 11.6|     | 10.0|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v5.4.1_vol100to1k_1453990237687.json  |
| 1.0.6  | aws-t2.micro |  5.4.1  |  4.3|  5.4|  4.9| 12.7|     | 12.3|  6.6|  7.4|  5.2|  6.1|  5.3|  8.2| 79.0|     | 76.0| 76.0|     | 61.5|  6.5|     |  6.9|  8.5|     |  8.2|124.1|     | 20.8|  7.9|  6.1|  9.3|     |  5.7|  7.6|     |  5.1| 28.5|     | 25.8| 32.2|     | 24.7|  7.5|     |  7.7| 18.7|     |  8.5|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v5.4.1_vol100to1k_1453990325684.json  |
| 1.0.6  | aws-t2.micro |  5.4.1  |  4.3|  5.5|  4.8| 12.4|     | 13.2|  8.0|  8.4|  9.6|  5.5|  6.2|  3.8| 76.6|     | 74.2| 63.5|     | 57.3|  6.7|     | 12.5| 13.8|     |  8.6| 10.8|     | 13.5|  3.5|  3.7|  3.7|     | 92.5|  4.0|     |  3.0| 25.1|     | 20.6|276.9|     | 26.5|  8.9|     |  5.0| 18.3|     |  9.3|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v5.4.1_vol100to1k_1453990410323.json  |
| 1.0.6  | aws-t2.micro |  5.4.1  |  5.0|  6.5|  4.8| 12.0|     | 13.7|  6.6|  9.1|  5.6|  7.8|  4.2|  6.3| 70.0|     | 95.6| 67.9|     | 62.0|  6.4|     | 12.5|  7.9|     |  8.8| 18.5|     | 14.8|  9.6|  7.5|  7.4|     |  7.9|  8.7|     |  7.1| 18.4|     | 29.0| 33.7|     | 30.6| 22.0|     | 11.7| 18.3|     | 10.4|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v5.4.1_vol100to1k_1453990493666.json  |
| 1.0.6  | aws-t2.micro |6.0.0-pre| 12.3|  6.7|  5.9| 12.5|     | 12.0|  9.6|  9.8|  8.3|  7.0|  5.1|  7.9|137.9|     |140.5| 28.8|     | 34.7|  8.8|     |  8.6| 12.2|     | 21.8| 29.6|     | 28.8|  6.3|  6.7|  6.9|     |  6.4|  8.5|     |  6.1| 35.1|     | 36.1| 41.3|     | 40.4| 12.8|     | 22.7| 16.2|     | 26.6|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v6.0.0-pre_vol100to1k_1453989863637.js|
| 1.0.6  | aws-t2.micro |6.0.0-pre|  5.2|  9.8|  6.1| 15.2|     | 11.4|  8.4|  9.8| 10.7|  6.3|  5.2|  9.0|155.0|     |145.8|114.7|     |107.1|  8.9|     | 20.4| 11.3|     | 11.2| 18.2|     | 20.4|  7.4|  6.9|  6.6|     | 10.2| 14.0|     |  6.1|265.6|     | 36.0| 41.0|     | 35.3| 20.2|     | 11.2| 19.5|     | 27.4|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v6.0.0-pre_vol100to1k_1453989966972.js|
| 1.0.6  | aws-t2.micro |6.0.0-pre|  7.4|  7.2|  6.0| 16.2|     | 17.1| 15.0|  9.8|  8.6|  7.6|  4.6|  5.2|383.1|     |125.3|134.8|     |109.1|  8.4|     | 15.8| 11.4|     | 10.6| 28.7|     | 28.1| 14.8|  7.5| 19.3|     |  6.5|  8.5|     |  7.2| 45.9|     |  9.5|180.5|     | 39.5| 25.0|     | 13.3| 27.0|     | 15.9|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v6.0.0-pre_vol100to1k_1453990070701.js|
| 1.0.6  | aws-t2.micro |6.0.0-pre|  5.5|  6.4|  6.4| 15.7|     | 17.0|  8.5|  9.9|  9.3|  6.2|  5.8|  5.3|175.0|     |147.4|124.9|     |128.1|  8.8|     |  9.2| 11.7|     | 11.2| 27.6|     | 28.0| 19.2|  7.7| 18.5|     |  7.7| 21.8|     |  7.0| 44.0|     | 39.3| 42.5|     | 41.3| 24.1|     | 22.9| 26.5|     | 26.5|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v6.0.0-pre_vol100to1k_1453990179012.js|
| 1.0.6  | aws-t2.micro |6.0.0-pre|  6.1| 13.2|  6.7| 17.4|     | 22.2| 15.7| 19.9|  7.1| 13.4|  5.1| 10.9|141.7|     |128.5|269.0|     | 34.2|  8.6|     | 16.4| 15.5|     | 11.0| 27.8|     |102.9| 19.5| 13.8| 10.1|     |  6.5|  6.7|     |  6.4| 47.9|     | 42.7| 46.1|     | 41.8| 22.0|     | 21.6| 28.8|     | 26.6|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v6.0.0-pre_vol100to1k_1453990287849.js|
| 1.0.6  | aws-t2.micro |6.0.0-pre|  6.0| 13.1|  6.5| 17.3|     | 22.8| 14.4| 16.3|  7.0| 13.5|  8.9| 12.3|158.4|     |256.8|138.9|     |122.4|  8.8|     |  9.3| 54.8|     | 10.9| 19.0|     | 29.2|  6.8|  9.2| 14.6|     | 18.0| 18.6|     |  7.5| 44.7|     | 20.3| 46.5|     | 43.4| 13.1|     | 15.5| 28.8|     | 14.3|2016-01-28_linux_aws-t2.micro_v1.0.6_node-v6.0.0-pre_vol100to1k_1453990406906.js|
| 1.0.6  | aws-t2.small | 0.12.7  | 12.0| 18.1| 25.6|132.0| 49.6| 39.1|454.0| 64.8|258.3| 38.8|110.3| 17.9| 32.2| 70.6| 61.4| 24.4| 20.2| 20.1| 83.7|171.1|181.6| 14.8| 10.2| 46.5| 14.3| 13.4| 32.0|  4.4|  4.8|105.3|  9.8|  4.3|  4.0| 11.4|  3.9| 25.9| 23.5| 22.7| 25.7| 22.2| 21.2| 27.3|  6.6|  6.4|  8.1| 35.3|  8.5|2016-01-22_linux_aws-t2.small_v1.0.6_node-v0.12.7_vol100to10k_1453429406710.json|
| 1.0.6  | aws-t2.small | 0.12.7  | 24.7| 44.3| 24.5|185.1| 69.9| 80.3|172.7| 42.4|172.7| 34.7|166.6| 38.8| 45.1| 44.6| 40.4| 22.1| 23.2| 59.8|129.7|170.9|170.6|641.3| 18.0| 11.3| 16.8| 13.8| 13.8|  4.9|  4.9| 24.7|  4.7|  4.4|  4.1| 20.1| 11.8| 26.9| 25.2| 22.8| 22.2| 23.1| 26.9|  8.4|  6.9| 15.9|  8.7| 21.3|  6.5|2016-01-22_linux_aws-t2.small_v1.0.6_node-v0.12.7_vol100to10k_1453430863527.json|
| 1.0.6  | aws-t2.small |  4.2.4  |  4.5|  9.7|  5.1| 12.7|     | 13.4|  6.9|  8.9|  4.2|  7.4|  3.4|  4.6| 81.7|     | 68.4| 58.4|     | 58.6|  6.9|     |  6.4|  8.2|     |  7.7| 14.1|     | 19.2| 94.6|  5.7|  4.1|     |  3.9|  3.9|     |  3.8| 23.4|     | 23.0| 24.3|     | 24.4|  7.7|     |  6.1| 14.9|     |  9.9|2016-01-23_linux_aws-t2.small_v1.0.6_node-v4.2.4_vol100to1k_1453567810684.json  |
| 1.0.6  | aws-t2.small |  4.2.4  |  4.4|  8.8|  5.0| 12.1|     |  9.7|  6.4|  8.1|  4.3|  4.7|  3.5|  3.6| 79.6|     | 73.4| 62.2|     | 56.8|  6.9|     |  6.9|  8.3|     |  8.3| 13.3|     | 14.4| 96.8|  4.6| 11.2|     |  4.0|  5.4|     |  3.7|  5.8|     | 24.6| 26.2|     | 24.1| 17.0|     |  6.6| 19.2|     |  9.2|2016-01-23_linux_aws-t2.small_v1.0.6_node-v4.2.4_vol100to1k_1453567896997.json  |
| 1.0.6  |    win32     | 0.12.3  |  4.0| 11.0|  4.2| 11.8| 11.6| 14.9|  9.4| 12.0| 12.2| 10.6|  5.4| 10.3| 39.1|     | 57.3| 48.7|     | 64.0|  9.1|     |  8.0| 16.6|     | 10.9| 19.7|     | 14.2| 10.6| 10.7| 13.5|     |  9.5| 17.9|     |  5.5| 37.2|     | 45.6|126.2|     | 42.9| 15.4|     | 13.0| 20.1|     | 19.7|2016-01-28_win32_v1.0.6_node-v0.12.3_vol100to1k_1453987955112.json              |
| 1.0.6  |    win32     | 0.12.3  |     |     |     |     | 11.7|     |     |     |     |     |     |     |     | 42.6|     |     | 31.2|     |     |  8.9|     |     |  9.8|     |     | 13.8|     |     |     |     |  7.5|     |     |  9.1|     |     | 28.4|     |     | 30.8|     |     | 10.7|     |     | 32.4|2016-01-28_win32_v1.0.6_node-v0.12.3_vol10k_1453990731360.json                  |
| 1.0.5  | aws-t2.micro |  5.4.1  | 21.4| 16.4| 65.6| 28.1|     | 42.5| 26.2| 19.2| 17.4| 16.9| 13.3| 14.0|143.4|     |136.9| 32.8|     |122.3| 18.8|     | 18.6| 25.7|     | 21.4| 38.5|     | 37.6| 18.4| 26.0| 26.0|     | 25.1| 22.8|     | 21.4| 56.4|     | 50.0| 50.8|     | 51.3| 27.9|     | 30.3| 30.6|     | 36.9|2016-01-28_linux_aws-t2.micro_v1.0.5_node-v5.4.1_v100to1k_1454016505008.json    |
| 1.0.5  | aws-t2.small |  4.2.4  | 17.6| 15.6| 16.0| 16.3| 21.2| 78.7| 11.8| 41.2|  9.5| 37.8|  9.4| 54.0| 98.8| 77.4| 77.0| 88.8| 65.7| 63.0| 12.6| 14.2| 23.8| 13.3| 13.8| 12.4| 19.0| 22.5| 20.7| 10.1|  9.7| 13.6|  9.0| 13.1| 10.8| 12.3|  9.0| 94.2| 31.5| 44.1| 37.9| 30.4| 36.7| 16.7| 16.8| 12.4| 18.1| 65.0| 15.5|2016-01-22_linux_aws-t2.small_v1.0.6_node-v4.2.4_vol100to10k_1453429445300.json |
| 1.0.5  | aws-t2.small |  4.2.4  | 37.0|122.7| 45.9|216.6|108.4|309.2|131.6| 35.9|156.2|163.7|181.3|282.5| 85.6|553.6| 92.1| 89.0| 67.3| 28.6|133.1| 96.9| 94.0| 19.4| 15.2| 16.9| 25.6| 22.0| 22.8| 34.9| 10.3| 12.2| 12.2|  9.7| 19.5| 24.4|  9.8| 46.2| 34.4| 33.2|187.5| 37.8| 38.7| 15.3| 13.0| 13.0| 14.8| 71.8| 16.9|2016-01-22_linux_aws-t2.small_v1.0.6_node-v4.2.4_vol100to10k_1453430392737.json |
| 1.0.5  | aws-t2.small |  5.4.1  | 12.5| 61.7| 16.3| 17.0| 21.0| 77.6| 12.0| 57.0| 21.3| 41.2| 14.0| 33.4| 87.2| 85.0| 81.3| 18.3| 26.7| 63.8| 29.5| 11.9| 13.7| 19.9| 13.0| 27.8| 27.1| 21.6| 20.6|  9.9|  8.8|  9.5|  8.2|  8.2| 16.1|  8.3| 10.3|142.5| 33.5| 28.5| 34.4| 33.8| 36.4| 21.9| 27.5| 10.9| 14.4| 82.9| 43.4|2016-01-22_linux_aws-t2.small_v1.0.6_node-v5.4.1_vol100to10k_1453429459694.json |
| 1.0.5  | aws-t2.small |  5.4.1  | 72.2| 11.9| 73.0| 18.0| 84.1|196.0| 23.8| 15.3| 19.8| 11.6|  9.3|197.7| 91.6| 81.5| 90.9| 78.9| 65.3| 77.8| 13.5|174.8|174.4| 17.9| 14.2| 40.4| 27.2| 29.1| 26.0| 10.4|  9.8|  9.1| 11.1|  8.8|  9.7|  8.5|  9.7| 33.3| 30.3| 29.9| 31.2| 30.1| 33.3| 19.6| 13.0| 11.7| 13.7| 19.3| 11.4|2016-01-22_linux_aws-t2.small_v1.0.6_node-v5.4.1_vol100to10k_1453430365109.json |
| 1.0.4  |    aws-t2    | 0.12.7  |131.5|357.1|215.8|191.9|266.4|469.7|209.3|202.5|192.9|832.4|178.1|370.0| 68.0| 72.9| 72.1| 81.6| 50.7| 60.2|183.0|181.0|206.4|651.2|249.8| 30.7| 40.4| 36.9| 37.7| 32.3| 31.6| 30.4| 24.8| 31.8| 23.1| 23.3| 26.9| 52.6| 51.2| 57.8| 59.5| 60.9| 57.0| 25.1| 33.2| 35.5| 37.4| 52.7| 24.9|2016-01-15_linux_aws-t2_v1.0.4_node-v0.12.7_vol100to10k_1452899581230.json      |
| 1.0.4  |    aws-t2    | 0.12.7  | 24.8| 71.4| 39.9| 21.8| 53.9| 87.4| 16.2|136.9| 22.4| 56.2| 13.8| 33.8| 72.6| 68.9| 72.7| 63.0| 51.3| 49.9| 18.4| 18.1| 18.6| 22.0| 23.0| 20.0| 32.1| 38.6| 38.1| 32.4| 28.4| 27.5| 27.3| 27.0| 21.9| 27.4| 26.3| 55.9| 53.6| 47.3| 55.3| 53.4| 81.8| 37.3| 39.0| 24.1| 37.4| 52.0| 32.0|2016-01-16_linux_aws-t2_v1.0.4_node-v0.12.7_vol100to10k_1452957601633.json      |
| 1.0.4  |    aws-t2    | 0.12.7  | 46.1| 48.1|188.8|105.5|252.3|345.2| 96.5|343.2| 97.8| 63.2|176.8| 82.8| 68.5| 66.9| 65.7| 60.1| 63.2| 41.9| 99.5| 99.1| 99.4| 23.8| 25.6| 19.9| 40.0| 40.2| 33.6| 36.7| 20.6|167.6| 18.1| 27.0| 28.0| 27.5| 32.9| 85.2| 47.5| 59.1| 58.0| 60.7| 42.8| 35.3| 34.3| 32.9| 52.2| 60.0| 28.4|2016-01-16_linux_aws-t2_v1.0.4_node-v0.12.7_vol100to10k_1452959435828.json      |
| 1.0.4  |   aws-t2.    | 0.12.7  | 92.5|529.0|212.3|221.7|262.4|557.1|199.1|465.3|178.7|344.4|377.5|416.0| 81.9| 90.5| 75.4| 46.9| 51.3| 54.0|222.1|181.4|181.9|642.9|237.3| 27.6| 39.4| 38.8| 36.1| 17.5| 27.1| 24.2| 23.1| 19.9| 25.5| 25.8| 26.0| 50.7| 53.2| 62.3| 54.8| 51.4| 48.4| 34.8| 33.1| 30.1| 80.6| 52.9| 23.8|2016-01-15_linux_aws-t2._v1.0.4_node-v0.12.7_vol100to10k_1452888917988.json     |

Response times are the 95th percentile (95% of responses are faster) for all matches or filters 
performed for each test shown divided by the number of properties being checked for a match. 
This allows a consistent way of looking at response times across all tests regardless if a match was for one property or 1000.

For example a match test of 5 properties tested 100 times: 
  If 95 of the tests responded in 20.0 milliseconds or faster, (regardless of whether match was true or false)
  then the number displayed here would be 4.0 (20.0 / 5 properties.)

f1 : filter_k100to100_m100_v100to100
f2 : filter_k10to100_m50_v100to100
f3 : filter_k10to100_m50_v1kto1k
f4 : filter_k1to100_charDotStar_v1kto100
f5 : filter_k1to100_charDotStar_v1kto10k
f6 : filter_k1to100_charDotStar_v1kto1k
f7 : filter_k1to100_m50_v100to100
f8 : filter_k1to100_m50_v1kto1k
f9 : filter_k1to1_pRegDotStar_tWord_m50_v100to100
f10 : filter_k1to1_pRegDotStar_tWord_m50_v1kto1k
f11 : filter_k1to1_pWord_tWord_m50_v100to100
f12 : filter_k1to1_pWord_tWord_m50_v1kto1k
ms1 : matchSimple_k1to100_m50_v100to100
ms2 : matchSimple_k1to100_m50_v10kto10k
ms3 : matchSimple_k1to100_m50_v1kto1k
ms4 : matchSimple_k1to1_pWord_tWord_m50_v100to100
ms5 : matchSimple_k1to1_pWord_tWord_m50_v10kto10k
ms6 : matchSimple_k1to1_pWord_tWord_m50_v1kto1k
m1 : match_k100to100_m100_v100to100
m2 : match_k100to100_m100_v10kto10k
m3 : match_k100to100_m100_v1kto1k
m4 : match_k10to100_m50_v100to100
m5 : match_k10to100_m50_v10kto10k
m6 : match_k10to100_m50_v1kto1k
m7 : match_k1to100_m50_v100to100
m8 : match_k1to100_m50_v10kto10k
m9 : match_k1to100_m50_v1kto1k
m10 : match_k1to1_pParagraph_tParagraph_m50_v100to100
m11 : match_k1to1_pParagraph_tParagraph_m50_v1kto1k
m12 : match_k1to1_pString_tString_m50_v100to100
m13 : match_k1to1_pString_tString_m50_v10kto10k
m14 : match_k1to1_pString_tString_m50_v1kto1k
m15 : match_k1to1_pWord_tWord_m50_v100to100
m16 : match_k1to1_pWord_tWord_m50_v10kto10k
m17 : match_k1to1_pWord_tWord_m50_v1kto1k
rm1 : regMatch_k1to1_pRegDotStar_tWord_m50_v100to100
rm2 : regMatch_k1to1_pRegDotStar_tWord_m50_v10kto10k
rm3 : regMatch_k1to1_pRegDotStar_tWord_m50_v1kto1k
rm4 : regMatch_k1to1_pRegDot_tWord_m50_v100to100
rm5 : regMatch_k1to1_pRegDot_tWord_m50_v10kto10k
rm6 : regMatch_k1to1_pRegDot_tWord_m50_v1kto1k
rm7 : regMatch_k1to1_pRegMidStr_tWord_m50_v100to100
rm8 : regMatch_k1to1_pRegMidStr_tWord_m50_v10kto10k
rm9 : regMatch_k1to1_pRegMidStr_tWord_m50_v1kto1k
rm10 : regMatch_k1to1_pRegPhone_tPhone_m50_v100to100
rm11 : regMatch_k1to1_pRegPhone_tPhone_m50_v10kto10k
rm12 : regMatch_k1to1_pRegPhone_tPhone_m50_v1kto1k


f1 : filter_k100to100_m100_v100to100
   filter      => filter test using makeFilterTargetObjectsFn()
   k100to100   => 100 pObj property matched against 100 tObj props in tObj of 100 properties
   m100        => 100% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
f2 : filter_k10to100_m50_v100to100
   filter      => filter test using makeFilterTargetObjectsFn()
   k10to100    => 10 pObj property matched against 10 tObj props in tObj of 100 properties
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
f3 : filter_k10to100_m50_v1kto1k
   filter      => filter test using makeFilterTargetObjectsFn()
   k10to100    => 10 pObj property matched against 10 tObj props in tObj of 100 properties
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
f4 : filter_k1to100_charDotStar_v1kto100
   filter      => filter test using makeFilterTargetObjectsFn()
   k1to100     => 1 pObj property matched against 1 tObj prop in tObj of 100 properties
   charDotStar => reg exp=>1 rand char followed by .* by 1 rand char eg /B.*l/
   v1kto100    => null
f5 : filter_k1to100_charDotStar_v1kto10k
   filter      => filter test using makeFilterTargetObjectsFn()
   k1to100     => 1 pObj property matched against 1 tObj prop in tObj of 100 properties
   charDotStar => reg exp=>1 rand char followed by .* by 1 rand char eg /B.*l/
   v1kto10k    => null
f6 : filter_k1to100_charDotStar_v1kto1k
   filter      => filter test using makeFilterTargetObjectsFn()
   k1to100     => 1 pObj property matched against 1 tObj prop in tObj of 100 properties
   charDotStar => reg exp=>1 rand char followed by .* by 1 rand char eg /B.*l/
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
f7 : filter_k1to100_m50_v100to100
   filter      => filter test using makeFilterTargetObjectsFn()
   k1to100     => 1 pObj property matched against 1 tObj prop in tObj of 100 properties
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
f8 : filter_k1to100_m50_v1kto1k
   filter      => filter test using makeFilterTargetObjectsFn()
   k1to100     => 1 pObj property matched against 1 tObj prop in tObj of 100 properties
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
f9 : filter_k1to1_pRegDotStar_tWord_m50_v100to100
   filter      => filter test using makeFilterTargetObjectsFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pRegDotStar => pObj has reg exp 1 rand char followed by .* by rand char eg /B.*l/
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
f10 : filter_k1to1_pRegDotStar_tWord_m50_v1kto1k
   filter      => filter test using makeFilterTargetObjectsFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pRegDotStar => pObj has reg exp 1 rand char followed by .* by rand char eg /B.*l/
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
f11 : filter_k1to1_pWord_tWord_m50_v100to100
   filter      => filter test using makeFilterTargetObjectsFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pWord       => 3 to 10 random characters in pObj value
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
f12 : filter_k1to1_pWord_tWord_m50_v1kto1k
   filter      => filter test using makeFilterTargetObjectsFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pWord       => 3 to 10 random characters in pObj value
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
ms1 : matchSimple_k1to100_m50_v100to100
   matchSimple => match test calling matches() directly withou creating makeMatchFn()
   k1to100     => 1 pObj property matched against 1 tObj prop in tObj of 100 properties
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
ms2 : matchSimple_k1to100_m50_v10kto10k
   matchSimple => match test calling matches() directly withou creating makeMatchFn()
   k1to100     => 1 pObj property matched against 1 tObj prop in tObj of 100 properties
   m50         => ~50% match between pObjs & tObjs
   v10kto10k   => volume 10,000: 10k unique pObj objects against 10k unique tObj objects; filter tests filter each pObj to 10k tObjs; match tests go 1:1
ms3 : matchSimple_k1to100_m50_v1kto1k
   matchSimple => match test calling matches() directly withou creating makeMatchFn()
   k1to100     => 1 pObj property matched against 1 tObj prop in tObj of 100 properties
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
ms4 : matchSimple_k1to1_pWord_tWord_m50_v100to100
   matchSimple => match test calling matches() directly withou creating makeMatchFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pWord       => 3 to 10 random characters in pObj value
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
ms5 : matchSimple_k1to1_pWord_tWord_m50_v10kto10k
   matchSimple => match test calling matches() directly withou creating makeMatchFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pWord       => 3 to 10 random characters in pObj value
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v10kto10k   => volume 10,000: 10k unique pObj objects against 10k unique tObj objects; filter tests filter each pObj to 10k tObjs; match tests go 1:1
ms6 : matchSimple_k1to1_pWord_tWord_m50_v1kto1k
   matchSimple => match test calling matches() directly withou creating makeMatchFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pWord       => 3 to 10 random characters in pObj value
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
m1 : match_k100to100_m100_v100to100
   match       => match test using match from create makeMatchFn()
   k100to100   => 100 pObj property matched against 100 tObj props in tObj of 100 properties
   m100        => 100% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
m2 : match_k100to100_m100_v10kto10k
   match       => match test using match from create makeMatchFn()
   k100to100   => 100 pObj property matched against 100 tObj props in tObj of 100 properties
   m100        => 100% match between pObjs & tObjs
   v10kto10k   => volume 10,000: 10k unique pObj objects against 10k unique tObj objects; filter tests filter each pObj to 10k tObjs; match tests go 1:1
m3 : match_k100to100_m100_v1kto1k
   match       => match test using match from create makeMatchFn()
   k100to100   => 100 pObj property matched against 100 tObj props in tObj of 100 properties
   m100        => 100% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
m4 : match_k10to100_m50_v100to100
   match       => match test using match from create makeMatchFn()
   k10to100    => 10 pObj property matched against 10 tObj props in tObj of 100 properties
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
m5 : match_k10to100_m50_v10kto10k
   match       => match test using match from create makeMatchFn()
   k10to100    => 10 pObj property matched against 10 tObj props in tObj of 100 properties
   m50         => ~50% match between pObjs & tObjs
   v10kto10k   => volume 10,000: 10k unique pObj objects against 10k unique tObj objects; filter tests filter each pObj to 10k tObjs; match tests go 1:1
m6 : match_k10to100_m50_v1kto1k
   match       => match test using match from create makeMatchFn()
   k10to100    => 10 pObj property matched against 10 tObj props in tObj of 100 properties
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
m7 : match_k1to100_m50_v100to100
   match       => match test using match from create makeMatchFn()
   k1to100     => 1 pObj property matched against 1 tObj prop in tObj of 100 properties
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
m8 : match_k1to100_m50_v10kto10k
   match       => match test using match from create makeMatchFn()
   k1to100     => 1 pObj property matched against 1 tObj prop in tObj of 100 properties
   m50         => ~50% match between pObjs & tObjs
   v10kto10k   => volume 10,000: 10k unique pObj objects against 10k unique tObj objects; filter tests filter each pObj to 10k tObjs; match tests go 1:1
m9 : match_k1to100_m50_v1kto1k
   match       => match test using match from create makeMatchFn()
   k1to100     => 1 pObj property matched against 1 tObj prop in tObj of 100 properties
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
m10 : match_k1to1_pParagraph_tParagraph_m50_v100to100
   match       => match test using match from create makeMatchFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pParagraph  => pObj is a string of of 5-200 'words' of random 3-10 chars seperated by spaces
   tParagraph  => pObj is a string of of 5-200 'words' of random 3-10 chars seperated by spaces
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
m11 : match_k1to1_pParagraph_tParagraph_m50_v1kto1k
   match       => match test using match from create makeMatchFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pParagraph  => pObj is a string of of 5-200 'words' of random 3-10 chars seperated by spaces
   tParagraph  => pObj is a string of of 5-200 'words' of random 3-10 chars seperated by spaces
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
m12 : match_k1to1_pString_tString_m50_v100to100
   match       => match test using match from create makeMatchFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pString     => pObj is a string of 30 to 150 random characters
   tString     => tObj is a string of 30 to 150 random characters
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
m13 : match_k1to1_pString_tString_m50_v10kto10k
   match       => match test using match from create makeMatchFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pString     => pObj is a string of 30 to 150 random characters
   tString     => tObj is a string of 30 to 150 random characters
   m50         => ~50% match between pObjs & tObjs
   v10kto10k   => volume 10,000: 10k unique pObj objects against 10k unique tObj objects; filter tests filter each pObj to 10k tObjs; match tests go 1:1
m14 : match_k1to1_pString_tString_m50_v1kto1k
   match       => match test using match from create makeMatchFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pString     => pObj is a string of 30 to 150 random characters
   tString     => tObj is a string of 30 to 150 random characters
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
m15 : match_k1to1_pWord_tWord_m50_v100to100
   match       => match test using match from create makeMatchFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pWord       => 3 to 10 random characters in pObj value
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
m16 : match_k1to1_pWord_tWord_m50_v10kto10k
   match       => match test using match from create makeMatchFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pWord       => 3 to 10 random characters in pObj value
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v10kto10k   => volume 10,000: 10k unique pObj objects against 10k unique tObj objects; filter tests filter each pObj to 10k tObjs; match tests go 1:1
m17 : match_k1to1_pWord_tWord_m50_v1kto1k
   match       => match test using match from create makeMatchFn()
   k1to1       => 1 pObj property matched to tObj with 1 property
   pWord       => 3 to 10 random characters in pObj value
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
rm1 : regMatch_k1to1_pRegDotStar_tWord_m50_v100to100
   regMatch    => regular expression match test
   k1to1       => 1 pObj property matched to tObj with 1 property
   pRegDotStar => pObj has reg exp 1 rand char followed by .* by rand char eg /B.*l/
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
rm2 : regMatch_k1to1_pRegDotStar_tWord_m50_v10kto10k
   regMatch    => regular expression match test
   k1to1       => 1 pObj property matched to tObj with 1 property
   pRegDotStar => pObj has reg exp 1 rand char followed by .* by rand char eg /B.*l/
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v10kto10k   => volume 10,000: 10k unique pObj objects against 10k unique tObj objects; filter tests filter each pObj to 10k tObjs; match tests go 1:1
rm3 : regMatch_k1to1_pRegDotStar_tWord_m50_v1kto1k
   regMatch    => regular expression match test
   k1to1       => 1 pObj property matched to tObj with 1 property
   pRegDotStar => pObj has reg exp 1 rand char followed by .* by rand char eg /B.*l/
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
rm4 : regMatch_k1to1_pRegDot_tWord_m50_v100to100
   regMatch    => regular expression match test
   k1to1       => 1 pObj property matched to tObj with 1 property
   pRegDot     => pObj has one character replaced with . for reg exp test
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
rm5 : regMatch_k1to1_pRegDot_tWord_m50_v10kto10k
   regMatch    => regular expression match test
   k1to1       => 1 pObj property matched to tObj with 1 property
   pRegDot     => pObj has one character replaced with . for reg exp test
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v10kto10k   => volume 10,000: 10k unique pObj objects against 10k unique tObj objects; filter tests filter each pObj to 10k tObjs; match tests go 1:1
rm6 : regMatch_k1to1_pRegDot_tWord_m50_v1kto1k
   regMatch    => regular expression match test
   k1to1       => 1 pObj property matched to tObj with 1 property
   pRegDot     => pObj has one character replaced with . for reg exp test
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
rm7 : regMatch_k1to1_pRegMidStr_tWord_m50_v100to100
   regMatch    => regular expression match test
   k1to1       => 1 pObj property matched to tObj with 1 property
   pRegMidStr  => pObj has a random number of consecutive characters from tObj string; eg /anke/
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
rm8 : regMatch_k1to1_pRegMidStr_tWord_m50_v10kto10k
   regMatch    => regular expression match test
   k1to1       => 1 pObj property matched to tObj with 1 property
   pRegMidStr  => pObj has a random number of consecutive characters from tObj string; eg /anke/
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v10kto10k   => volume 10,000: 10k unique pObj objects against 10k unique tObj objects; filter tests filter each pObj to 10k tObjs; match tests go 1:1
rm9 : regMatch_k1to1_pRegMidStr_tWord_m50_v1kto1k
   regMatch    => regular expression match test
   k1to1       => 1 pObj property matched to tObj with 1 property
   pRegMidStr  => pObj has a random number of consecutive characters from tObj string; eg /anke/
   tWord       => 3 to 10 random characters in tObj value
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1
rm10 : regMatch_k1to1_pRegPhone_tPhone_m50_v100to100
   regMatch    => regular expression match test
   k1to1       => 1 pObj property matched to tObj with 1 property
   pRegPhone   => pObj is a regular expression that tests for phone format
   tPhone      => tObj is a phone number of various possible accepted formats
   m50         => ~50% match between pObjs & tObjs
   v100to100   => volume 100: 100 unique pObj objects, 100 unique tObj objects; filter tests filter each pObj to 100 tObjs; match tests go 1:1
rm11 : regMatch_k1to1_pRegPhone_tPhone_m50_v10kto10k
   regMatch    => regular expression match test
   k1to1       => 1 pObj property matched to tObj with 1 property
   pRegPhone   => pObj is a regular expression that tests for phone format
   tPhone      => tObj is a phone number of various possible accepted formats
   m50         => ~50% match between pObjs & tObjs
   v10kto10k   => volume 10,000: 10k unique pObj objects against 10k unique tObj objects; filter tests filter each pObj to 10k tObjs; match tests go 1:1
rm12 : regMatch_k1to1_pRegPhone_tPhone_m50_v1kto1k
   regMatch    => regular expression match test
   k1to1       => 1 pObj property matched to tObj with 1 property
   pRegPhone   => pObj is a regular expression that tests for phone format
   tPhone      => tObj is a phone number of various possible accepted formats
   m50         => ~50% match between pObjs & tObjs
   v1kto1k     => volume 1,00: 1,00 unique pObj objects against 1,000 unique tObj objects; filter tests filter each pObj to 1000 tObjs; match tests go 1:1

